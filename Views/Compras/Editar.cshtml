@model Compra


<h2>Editar Compra</h2>

<form asp-action="Editar" method="post" onsubmit="renomearItensCompra()">
    <div class="form-group w-50 mb-3">
        <label for="DataCompra">Data da Compra</label>
        <input asp-for="DataCompra" class="form-control" type="date" id="DataCompra"/>
    </div>

    <div class="form-group w-50 mb-3">
        <label for="FornecedorId">Fornecedor</label>
        <select asp-for="FornecedorId" asp-items="ViewBag.Fornecedores" class="form-control"></select>
    </div>
    <div class="form-group w-50 mb-3">
        <label for="FuncionarioId">Funcionario</label>
        <select asp-for="FuncionarioId" asp-items="ViewBag.Funcionarios" class="form-control"></select>
    </div>
    <div class="form-group w-50 mb-3">
        <label for="FormaPagamento">Forma de Pagamento</label>
        <select asp-for="FormaPagamento" asp-items="ViewBag.FormaPagamento" class="form-control"></select>
    </div>
    <div class="form-group w-50 mb-3">
        <label for="FormaEntrega">Forma de Entrega</label>
        <select asp-for="FormaEntrega" asp-items="ViewBag.FormaEntrega" class="form-control"></select>
    </div>
    <div class="form-group w-50 mb-3">
        <label for="Status">Status</label>
        <select asp-for="Status" asp-items="ViewBag.Status" class="form-control"></select>
    </div>

    <h4>Itens da Compra</h4>
    <table class="table" id="itensCompraTable">
        <thead>
        <tr>
            <th>Produto</th>
            <th>Quantidade</th>
            <th>Preço Unitário</th>
            <th>SubTotal</th>
            <th></th> <!-- Coluna para botão de remover item -->
        </tr>
        </thead>
        <tbody id="itensCompra">
        @foreach (var item in Model.ItensCompra)
        {
            <tr class="item-compra">
                <td>
                    <select name="ItensCompra[@item.Id].RecursoId" class="form-control  form-control-sm" onchange="atualizarPreco(@item.Id,this)">
                        @foreach (var recurso in (IEnumerable<dynamic>)ViewBag.Recursos)
                        {
                            <!option value="@recurso.Id" data-preco="@recurso.Preco" @(recurso.Id == item.Recurso.Id ? "selected" : "")>@recurso.Nome</!option>
                        }
                    </select>
                    <input type="hidden" name="ItensCompra[@item.Id].Id" value="@item.Id"/>
                    <input type="hidden" name="ItensCompra[@item.Id].CompraId" value="@item.CompraId"/>
                </td>
                <td>
                    <input type="number" step="1" min="0" max="1000" name="ItensCompra[@item.Id].Quantidade" class="form-control" value="@item.Quantidade" onchange="atualizarSubtotal(@item.Id,this)"/>
                </td>
                <td>
                    <input type="text" name="ItensCompra[@item.Id].Preco" class="form-control preco" readonly value="@item.Preco" />
                    <script>
                                console.log("Teste1");
                                console.log('@item.Preco');
                                console.log("FimTeste1");
                            </script>
                </td>
                <td>
                    <input type="text" name="ItensCompra[@item.Id].SubTotal" class="form-control" readonly value="@item.SubTotal"/>
                </td>
                <td>
                    <button type="button" class="btn btn-danger btn-sm" onclick="removerItem(this)">Remover</button>
                </td>
            </tr>
        }
        </tbody>
    </table>

    <button type="button" class="btn btn-success" id="adicionarItem">Adicionar Item</button>
    <br/>
    <br/>

    <!-- Campo para exibir o total da venda -->
    <div class="form-group" style="text-align: right;">
        <label for="Total">Total da Compra:</label>
        <input type="text" id="Total" class="form-control" readonly style="width: 100px; display: inline-block;"/>
    </div>

    <button type="submit" class="btn btn-primary">Salvar</button>
    <a asp-action="Index" class="btn btn-secondary ml-2">Voltar</a>
</form>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        let hoje = new Date().toISOString().split('T')[0];
        document.getElementById("DataCompra").value = hoje;
        atualizarTotalCompra();
    });
  
    let itemIndexCompra = 0;

    function renomearItensCompra() {
        const items = document.querySelectorAll(".item-compra");
        items.forEach((item, index) => {
            item.querySelectorAll("select, input").forEach(input => {
                const name = input.getAttribute("name");
                if (name) {
                    const newName = name.replace(/\[.*?\]/, `[${index}]`);
                    input.setAttribute("name", newName);
                }
            });
        });
    }

    document.getElementById("adicionarItem").addEventListener("click", function () {
        let novaLinha = `
            <tr class="item-compra">
                <td>
                    <select name="ItensCompra[].RecursoId" class="form-control form-control-sm" onchange="atualizarPreco(0,this)">
                        @foreach (var recurso in (IEnumerable<dynamic>)ViewBag.Recursos)
                        {
                            <option value="@recurso.Id" data-preco="@recurso.Preco">@recurso.Nome</option>
                        }
                    </select>
                </td>
                <td><input type="number"  step="1" min="0" max="1000" name="ItensCompra[].Quantidade" class="form-control" onchange="atualizarSubtotal(0,this)" value="1"/></td>
                <td><input type="text" name="ItensCompra[].Preco" class="form-control preco" readonly /></td>
                <td><input type="text" name="ItensCompra[].SubTotal" class="form-control" readonly /></td>
                <td><button type="button" class="btn btn-danger btn-sm" onclick="removerItem(this)">Remover</button></td>
            </tr>`;
        
        document.getElementById("itensCompra").insertAdjacentHTML('beforeend', novaLinha);
        
        const ultimaLinha = document.getElementById("itensCompra").lastElementChild;
        const selectProduto = ultimaLinha.querySelector('select[name="ItensCompra[].RecursoId"]');
        atualizarPreco(0,selectProduto);        
        atualizarTotalCompra();
    });

    function removerItem(botao) {
        botao.closest('tr').remove();
        atualizarTotalCompra();
    }

function atualizarSubtotal(index, input) {
    const row = input.closest('tr');

    let quantidade;
    let preco;
    
    if (index !== 0 ) {
        quantidade = parseFloat(row.querySelector(`input[name="ItensCompra[${index}].Quantidade"]`).value) || 0;
        precostr = (row.querySelector(`input[name="ItensCompra[${index}].Preco"]`).value) || 0;
        preco=parseFloat(precostr.replace(",","."));
        const subtotal = quantidade * preco;
        row.querySelector(`input[name="ItensCompra[${index}].SubTotal"]`).value = subtotal.toFixed(2).toString();

    } else {
        console.log("index do subtotal==0");
        quantidade = parseFloat(row.querySelector(`input[name="ItensCompra[].Quantidade"]`).value) || 0;
        precostr = (row.querySelector(`input[name="ItensCompra[].Preco"]`).value) || 0;
        preco=parseFloat(precostr.replace(",","."));
        const subtotal = quantidade * preco;
        console.log("subtotal:"+subtotal);
        row.querySelector(`input[name="ItensCompra[].SubTotal"]`).value = subtotal.toFixed(2).toString();
    }
    
    atualizarTotalCompra();
}


    function atualizarPreco(index, selectElement) {
        let row = selectElement.closest('tr'); 
        let preco = selectElement.options[selectElement.selectedIndex].getAttribute('data-preco');
        let precoInput;
        if (index !== 0 ) {
            precoInput = row.querySelector(`input[name="ItensCompra[${index}].Preco"]`);
            } else {
            console.log("index==0");
            precoInput = row.querySelector(`input[name="ItensCompra[].Preco"]`);
            console.log("testando se a função atualizarPreco pega o preco:"+preco);
        }          

        if (precoInput) {
            precoInput.value = preco || '0,00'; 
            console.log("testando se o preco foi inserido na variavel:"+precoInput.value);
            atualizarSubtotal(index,precoInput); 
        } else {
            console.error("Campo de preço não encontrado.");
        }
        
    }

    function atualizarTotalCompra() {
        let total = 0;
        document.querySelectorAll('input[name^="ItensCompra"][name$=".SubTotal"]').forEach(function (input) {
            console.log("somando ao total:"+input.value);
            let inputstr=(input.value).replace(",",".");
            console.log("somando ao total2:"+inputstr);
            total += parseFloat(inputstr) || 0;
        });
        console.log("total calculado:"+total);
        document.getElementById("Total").value = total.toFixed(2).toString();
    }
</script>